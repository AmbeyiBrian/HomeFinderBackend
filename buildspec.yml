version: 0.2

env:
  variables:
    DJANGO_SECRET_KEY: "django-insecure-dyvx9d9m-h83zvn^vzy_5-@_@l5c^xf)9lucs6!px7_=5$6+86"
    AWS_STORAGE_BUCKET_NAME: django-app-storage
    PYTHONPATH: /codebuild/output/src1579115079/src

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      # Install dependencies required for Python 3.10
      - yum update -y
      - yum groupinstall -y "Development Tools"
      - yum install -y openssl-devel bzip2-devel libffi-devel wget sqlite-devel

      # Download and install Python 3.10
      - wget https://www.python.org/ftp/python/3.10.1/Python-3.10.1.tgz
      - tar xzf Python-3.10.1.tgz
      - cd Python-3.10.1
      - ./configure --enable-optimizations
      - make altinstall
      - cd ..
      - rm -rf Python-3.10.1 Python-3.10.1.tgz

      # Update pip
      - python3.10 -m pip install --upgrade pip

  pre_build:
    commands:
      - python3.10 -m pip install -r requirements.txt

      # Create test settings file
      - |
        cat > test_settings.py << EOL
        from HomeFinderBackend.settings import *

        # Use SQLite for tests
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': ':memory:',
            }
        }

        # Storage Configuration
        STORAGES = {
            "default": {
                "BACKEND": "django.core.files.storage.FileSystemStorage",
                "OPTIONS": {
                    "location": "test_media/",
                    "base_url": "/media/",
                },
            },
            "staticfiles": {
                "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
            },
        }

        # Media/Static files
        MEDIA_URL = '/media/'
        MEDIA_ROOT = 'test_media/'
        STATIC_URL = '/static/'
        STATIC_ROOT = 'test_static/'

        # Disable external services during tests
        SENTRY_DSN = None
        EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

        # Configure test specific settings
        CELERY_TASK_ALWAYS_EAGER = True
        CELERY_TASK_EAGER_PROPAGATES = True
        PASSWORD_HASHERS = ['django.contrib.auth.hashers.MD5PasswordHasher']
        EOL

      # Export test settings
      - export DJANGO_SETTINGS_MODULE=test_settings

      # Run migrations
      - python3.10 manage.py migrate --noinput

      # Run tests with coverage
      - echo "Running tests"
      - python3.10 -m coverage run --source='.' manage.py test properties users reviews payments chatbot --verbosity=2

  build:
    commands:
      - echo "Running collectstatic"
      - python3.10 manage.py collectstatic --noinput
      - echo "Running coverage report"
      - python3.10 -m coverage report
      - echo "Running migrations check"
      - python3.10 manage.py check --deploy

  post_build:
    commands:
      - echo "Build completed"

artifacts:
  files:
    - '**/*'
  base-directory: '.'