version: 0.2

env:
  variables:
    PYTHONPATH: /codebuild/output/src/HomeFinderBackend
    DJANGO_DEBUG: "False"
  parameter-store:
    DJANGO_SECRET_KEY: /homefinder/django_secret_key
    AWS_STORAGE_BUCKET_NAME: /homefinder/storage_bucket_name
    AWS_ACCESS_KEY_ID: /homefinder/aws_access_key_id
    AWS_SECRET_ACCESS_KEY: /homefinder/aws_secret_access_key
    DB_NAME: /homefinder/db_name
    DB_USER: /homefinder/db_user
    DB_PASSWORD: /homefinder/db_password

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      # Update system and install dependencies
      - yum update -y
      - yum groupinstall -y "Development Tools"
      - yum install -y openssl-devel bzip2-devel libffi-devel wget sqlite-devel postgresql postgresql-devel

  pre_build:
    commands:
      # Install project dependencies
      - pip install -r requirements.txt
      - pip install coverage pytest pytest-django

      # Verify critical dependencies
      - python -c "import django; print('Django version:', django.get_version())"
      - python -c "import boto3; print('Boto3 version:', boto3.__version__)"
      
      # Create test settings
      - |
        cat > test_settings.py << EOL
        from HomeFinderBackend.settings import *

        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': ':memory:',
            }
        }

        STORAGES = {
            "default": {
                "BACKEND": "django.core.files.storage.FileSystemStorage",
                "OPTIONS": {
                    "location": "test_media/",
                    "base_url": "/media/",
                },
            },
            "staticfiles": {
                "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
            },
        }

        MEDIA_URL = '/media/'
        MEDIA_ROOT = 'test_media/'
        STATIC_URL = '/static/'
        STATIC_ROOT = 'test_static/'

        SENTRY_DSN = None
        EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
        CELERY_TASK_ALWAYS_EAGER = True
        CELERY_TASK_EAGER_PROPAGATES = True
        PASSWORD_HASHERS = ['django.contrib.auth.hashers.MD5PasswordHasher']
        EOL

      # Export test settings
      - export DJANGO_SETTINGS_MODULE=test_settings

      # Run database checks and migrations
      - python manage.py check
      - python manage.py migrate --noinput || (echo "Migration failed" && exit 1)

  build:
    commands:
      # Run tests with coverage
      - echo "Running tests with coverage"
      - coverage run --source='.' manage.py test properties users reviews payments chatbot --verbosity=2 || (echo "Tests failed" && exit 1)
      
      # Generate coverage report
      - coverage report
      - coverage xml
      
      # Run Django checks
      - python manage.py check --deploy
      
      # Collect static files
      - echo "Collecting static files"
      - python manage.py collectstatic --noinput || (echo "Static collection failed" && exit 1)

  post_build:
    commands:
      - echo "Running final checks..."
      - python manage.py check --deploy --fail-level WARNING
      - echo "Build completed successfully"

artifacts:
  files:
    - '**/*'
  exclude-paths:
    - '**/__pycache__/**'
    - '**/*.pyc'
    - '**/*.pyo'
    - '**/*.pyd'
    - '.git/**'
    - '.env'
    - '.coverage'
  base-directory: '.'

cache:
  paths:
    - '/root/.cache/pip/**/*'